Sanscript {
Program = Statement+
  Statement = PrintStatement
            | VariableDecl
            | AssignStatement
            | IfStatement
            | Return
            | FuncDecl
            | Call
            | Loop
  PrintStatement = print Exp ";"
  VariableDecl = var id "=" (Exp | Exp2) ";"
  AssignStatement  = id "=" Exp ";"
  Return = return Exp ";"
  IfStatement    = if "(" Exp ")" Block else Block                       -- long
            | if "(" Exp ")" Block else IfStatement                      -- elsif
            | if "(" Exp ")" Block                                  -- short

  Block = "{" Statement* "}"
  FuncDecl = function id "(" Params ")" Block
  Call = id "(" Params ")" 
  Loop = while Exp Block
  
  
  Exp       = ("-" | "!") Exp7                                      -- unary
            | Exp1 "?" Exp1 ":" Exp                                 -- ternary
            | Exp1
  Exp1      = Exp1 "||" Exp2                                        -- or
            | Exp2
  Exp2      = Exp2 "&&" Exp3                                        -- and
            | Exp3
  Exp3      = Exp4 ("<="|"<"|"=="|"!="|">="|">") Exp4               -- compare
            | Exp4  
  Exp4      = Exp4 ("+" | "-") Exp5                                 -- add
            | Exp5
  Exp5      = Exp5 ("*" | "/" | "%") Exp6                           -- multiply
            | Exp6
  Exp6      = Exp7 "**" Exp6                                        -- power
            | Exp7
  Exp7      = num
            | true
            | false
            | Call
            | id                                                    -- id
            | "(" Exp ")"                                           -- parentheses
            | stringlit
 


  Params    = ListOf<id, ",">
  Args      = ListOf<Exp, ",">
  id        = ~keyword letter withunderscore*
  withunderscore    = letter | digit | "_"
  function  = "prakriya" ~alnum
  print     = "likhana" ~alnum
  return 	= "laana" ~alnum
  var 		= "sankhya" ~alnum
  if 		= "agar" ~alnum
  else		= "varana" ~alnum
  true 		= "saty" ~alnum
  false 	= "asaty" ~alnum
  while 	= "jabaki" ~alnum
  in        = "andar" ~alnum
  break       = "rukana" ~alnum

  
  
  keyword   = function | else | if | while | else
             | in | break | return | true | false  

  num = digit+
  stringlit = "\"" (~"\\" ~"\"" ~"\n" any )* "\""
}